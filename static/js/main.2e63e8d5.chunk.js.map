{"version":3,"sources":["components/Clock.tsx","services/getRandomName.ts","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timer","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","name","props","debug","clearInterval","className","React","PureComponent","getRandomName","value","now","toString","App","clockName","hasClock","timerId","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAe,CACbC,MAAO,IAAIC,MAFf,EAKEC,MAAQ,EALV,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,MAAQE,OAAOC,aAAY,WAC9B,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAE3BM,QAAQC,KAAK,EAAKT,MAAMC,MAAMS,cAAcC,OAAO,IAAK,MACvD,OAZP,gCAeE,SAAmBC,GACbA,EAAUC,OAAST,KAAKU,MAAMD,MAEhCL,QAAQO,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDT,KAAKU,MAAMD,SAlBpE,kCAsBE,WACER,OAAOW,cAAcZ,KAAKD,SAvB9B,oBA0BE,WACE,IAAQU,EAAST,KAAKU,MAAdD,KACAZ,EAAUG,KAAKJ,MAAfC,MAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGhB,EAAMS,cAAcC,OAAO,IAAK,YAvC3C,GAA2BO,IAAMC,eCV1B,SAASC,IACd,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWZ,OAAO,GAE3C,MAAM,SAAN,OAAgBU,GCOX,IAAMG,EAAb,4MACExB,MAAe,CACbyB,UAAW,UACXC,UAAU,GAHd,EAMEC,QAAU,EANZ,uDAUE,WAA2B,IAAD,OACxBC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAEN,EAAKxB,SAAS,CAAEmB,UAAU,OAG5BE,SAASC,iBAAiB,SAAS,WACjC,EAAKtB,SAAS,CAAEmB,UAAU,OAG5BtB,KAAKuB,QAAUtB,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEkB,UAAWL,QAC1B,QAvBP,oBA0BE,WACE,MAAgChB,KAAKJ,MAA7ByB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKT,UAAU,MAAf,UACE,6CAECS,GACC,cAAC,EAAD,CACEb,KAAMY,WAnClB,GAAyBP,IAAMC,eCP/Ba,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.2e63e8d5.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  name: string;\n}\n\ninterface State {\n  today: Date;\n}\n\nexport class Clock extends React.PureComponent<Props, State> {\n  state: State = {\n    today: new Date(),\n  };\n\n  timer = 0;\n\n  componentDidMount(): void {\n    this.timer = window.setInterval(() => {\n      this.setState({ today: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timer);\n  }\n\n  render(): React.ReactNode {\n    const { name } = this.props;\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","export function getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\nimport { getRandomName } from './services/getRandomName';\n\ninterface State {\n  clockName: string,\n  hasClock: boolean,\n}\n\nexport class App extends React.PureComponent {\n  state: State = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  // window.clearInterval(timerId);\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault(); // not to show the context menu\n\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  render(): React.ReactNode {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock\n            name={clockName}\n          />\n        )}\n\n      </div>\n    );\n  }\n}\n\n//   // This code starts a timer\n// timerId = window.setInterval(() => {\n//   setState({ clockName = getRandomName() });\n// }, 3300);\n\n// // this code stops the timer\n// window.clearInterval(timerId);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}